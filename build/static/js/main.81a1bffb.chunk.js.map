{"version":3,"sources":["StateProvider.js","reducer.js","components/Search.js","pages/Home.js","useGoogleSearch.js","keys.js","pages/SearchPage.js","App.js","serviceWorker.js","index.js"],"names":["StateContext","createContext","StateProvider","reducer","initialState","children","Provider","value","useReducer","useStateValue","useContext","actionTypes","state","action","console","log","type","term","Search","hideButtons","dispatch","useState","input","setInput","history","useHistory","search","e","preventDefault","push","className","onChange","target","Button","onClick","variant","Home","to","Avatar","src","alt","useGoogleSearch","data","setData","useEffect","a","fetch","then","response","json","result","fetchData","SearchPage","searchInformation","formattedTotalResults","formattedSearchTime","items","map","item","href","link","pagemap","cse_image","length","displayLink","title","snippet","App","path","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.81a1bffb.chunk.js","sourcesContent":["  \r\nimport React, { createContext, useContext, useReducer } from \"react\";\r\n\r\n//Preparing the data layer\r\nexport const StateContext = createContext();\r\n\r\nexport const StateProvider = ({ reducer, initialState, children }) => (\r\n  <StateContext.Provider value={useReducer(reducer, initialState)}>\r\n    {children}\r\n  </StateContext.Provider>\r\n);\r\n\r\n//hook which allows us to pull information from the data layer\r\nexport const useStateValue = () => useContext(StateContext);","  \r\nexport const initialState = {\r\n    term: null,\r\n  };\r\n  \r\n  export const actionTypes = {\r\n    SET_SEARCH_TERM: \"SET_SEARCH_TERM\",\r\n  };\r\n  \r\n  const reducer = (state, action) => {\r\n    console.log(action);\r\n    switch (action.type) {\r\n      case actionTypes.SET_SEARCH_TERM:\r\n        return {\r\n          ...state,\r\n          term: action.term,\r\n        };\r\n  \r\n      default:\r\n        return state;\r\n    }\r\n  };\r\n  export default reducer;","import React, {useState} from 'react'\r\nimport \"./Search.css\"\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport MicIcon from '@material-ui/icons/Mic';\r\nimport { Button } from '@material-ui/core';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useStateValue } from '../StateProvider';\r\nimport { actionTypes } from '../reducer';\r\nfunction Search({hideButtons = false}) {\r\n    const [{}, dispatch] = useStateValue();\r\n\r\n    const [input, setInput] = useState(\"\");\r\n    const history = useHistory();\r\n    const search = e => {\r\n        \r\n        e.preventDefault();\r\n            console.log(\"you hit the search button >>\", input)\r\n\r\n            dispatch({\r\n                type: actionTypes.SET_SEARCH_TERM,\r\n                term: input\r\n            })\r\n        \r\n        history.push('/search')\r\n    }\r\n    return (\r\n        <form className=\"search\">\r\n            <div className=\"search__input\">\r\n                <SearchIcon className=\"search__inputIcon\"/>\r\n                <input value={input} onChange={e => setInput(e.target.value)}/>\r\n                <MicIcon/>\r\n            </div>\r\n\r\n            {!hideButtons ? (\r\n                            <div className=\"search__buttons\">\r\n                            <Button type=\"submit\" onClick={search} variant=\"outlined\">Google Search</Button>\r\n                            <Button onClick={search} variant=\"outlined\">I'm Feeling Lucky</Button>\r\n                        </div>\r\n            ): (\r\n                <div className=\"search__buttons\">\r\n                <Button className=\"search__buttonsHidden\" type=\"submit\" onClick={search} variant=\"outlined\">Google Search</Button>\r\n                <Button className=\"search__buttonsHidden\" onClick={search} variant=\"outlined\">I'm Feeling Lucky</Button>\r\n            </div>\r\n            )}\r\n\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default Search\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport AppsIcon from '@material-ui/icons/Apps';\r\nimport { Avatar } from '@material-ui/core';\r\nimport Search from \"../components/Search\";\r\nimport \"./Home.css\"\r\nfunction Home() {\r\n    return (\r\n        <div className=\"home\">\r\n            \r\n            <div className=\"home__header\">\r\n                <div className=\"home__headerLeft\">\r\n                    <Link to =\"/about\">About</Link>\r\n                    <Link to =\"/store\">Store</Link>\r\n                </div>\r\n                <div className=\"home__headerRignt\">\r\n                <Link to =\"/gamil\">gamil</Link>\r\n                <Link to =\"/images\">Images</Link>\r\n                <AppsIcon/>\r\n                <Avatar/>\r\n                </div>\r\n            </div>\r\n            <div className=\"home__body\">\r\n                <img src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/2/2f/Google_2015_logo.svg/1024px-Google_2015_logo.svg.png\" alt=\"\"/>\r\n                <div className=\"home__inputContainer\">\r\n                    <Search hideButtons/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home\r\n","import {useState,useEffect} from 'react'\r\nimport API_KEY from \"./keys\"\r\n\r\nconst CONTEXT_KEY =\"e3e300018aac8bc5b\";\r\nconst useGoogleSearch = (term) => {\r\n    const [data, setData] = useState(null);\r\n    \r\n\r\n    useEffect(() => {\r\n        const fetchData = async() => {\r\n            fetch(\r\n                `https://www.googleapis.com/customsearch/v1?key=\r\n                ${API_KEY}&cx=${CONTEXT_KEY}&q=${term}`\r\n            )\r\n            .then(response => response.json())\r\n            .then(result => {\r\n                setData(result)\r\n            })\r\n        }\r\n        fetchData();\r\n    }, [term])\r\n    return {data}\r\n}\r\n\r\nexport default useGoogleSearch\r\n","export const API_KEY = \"AIzaSyBx0NmAyoZRL6sFqQnUOLvbWpi0YgdxmBA\";\r\nexport default API_KEY;","import React from 'react';\r\nimport { useStateValue } from '../StateProvider';\r\nimport \"./SearchPage.css\";\r\nimport useGoogleSearch from \"../useGoogleSearch\";\r\nimport Response from \"../response\";\r\nimport { Link } from 'react-router-dom';\r\nimport Search from '../components/Search';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport ImageIcon from '@material-ui/icons/Image';\r\nimport DescriptionIcon from '@material-ui/icons/Description';\r\nimport LocalOfferIcon from '@material-ui/icons/LocalOffer';\r\nimport RoomIcon from '@material-ui/icons/Room';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\n\r\nfunction SearchPage() {\r\n    const [{term=\"wonho\"}, dispatch] = useStateValue();\r\n    const {data} = useGoogleSearch(term)\r\n    // const data = Response;\r\n    console.log(data);\r\n    return (\r\n        <div className=\"searchPage\">\r\n            <div className=\"searchPage__header\">\r\n                <Link to=\"/\">\r\n                    <img className=\"searchPage__logo\" src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/2/2f/Google_2015_logo.svg/1280px-Google_2015_logo.svg.png\" alt=\"\"/>\r\n                </Link>\r\n                <div className=\"searchPage__headerBody\">\r\n                <Search hideButtons/>\r\n                <div className=\"searchPage__options\">\r\n                    <div className=\"searchPage__optionsLeft\">\r\n                        <div className=\"searchPage__option\">\r\n                            <SearchIcon/>\r\n                            <Link to=\"/all\">All</Link>\r\n                        </div>\r\n                        <div className=\"searchPage__option\">\r\n                            <DescriptionIcon/>\r\n                            <Link to=\"/News\">News</Link>\r\n                        </div>\r\n                        <div className=\"searchPage__option\">\r\n                            <ImageIcon/>\r\n                            <Link to=\"/Images\">Images</Link>\r\n                        </div>\r\n                        <div className=\"searchPage__option\">\r\n                            <LocalOfferIcon/>\r\n                            <Link to=\"/shopping\">shopping</Link>\r\n                        </div>\r\n                        <div className=\"searchPage__option\">\r\n                            <RoomIcon/>\r\n                            <Link to=\"/maps\">maps</Link>\r\n                        </div>\r\n                        <div className=\"searchPage__option\">\r\n                            <MoreVertIcon/>\r\n                            <Link to=\"/more\">more</Link>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"searchPage__optionsRight\">\r\n                        <div className=\"searchPage__option\">\r\n                            <Link to=\"/settings\">Settings</Link>\r\n                        </div>\r\n                        <div className=\"searchPage__option\">\r\n                            <Link to=\"/tools\">\r\n                                Tools\r\n                            </Link>\r\n                        </div>\r\n                        \r\n                    </div>\r\n                </div>\r\n                </div>\r\n            </div>\r\n\r\n           {term &&(\r\n           <div className=\"searchPage__results\">\r\n               <p className=\"searchPage__resultCount\">\r\n           About {data?.searchInformation.formattedTotalResults} results({data?.searchInformation.formattedSearchTime}sec) for {term}\r\n               </p>\r\n               {data?.items.map(item => (\r\n                   <div className=\"searchPage__result\">\r\n                       <a href={item.link}>\r\n                           {item.pagemap?.cse_image?.length > 0 && item.pagemap?.cse_image[0]?.src &&(\r\n                               <img className=\"searchPage__resultImage\" src={item.pagemap?.cse_image[0]?.src} alt=\"\"/>\r\n                           )}\r\n                           {item.displayLink}</a>\r\n                       <a className=\"searchPage__resultTitle\" href={item.link}>\r\n                           <h2>{item.title}</h2>\r\n                       </a>\r\n                       <p className=\"searchPage__resultSnippet\">\r\n                           {item.snippet}\r\n                       </p>\r\n                       \r\n                   </div>\r\n               ))}\r\n        </div>)\r\n        }\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SearchPage\r\n","import React from 'react';\nimport Home from \"./pages/Home\"\nimport './App.css';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\nimport SearchPage from \"./pages/SearchPage\"\nfunction App() {\n  return (\n    <div className=\"app\">\n      <Router>\n        <Switch>\n          <Route path=\"/search\">\n            <SearchPage/>\n          </Route>\n          <Route path=\"/\">\n          <Home/>\n          </Route>\n        </Switch>\n    \n      \n      </Router>\n\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","  \nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport reducer, { initialState } from \"./reducer\";\nimport { StateProvider } from \"./StateProvider\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <StateProvider initialState={initialState} reducer={reducer}>\n    <App />\n    </StateProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}